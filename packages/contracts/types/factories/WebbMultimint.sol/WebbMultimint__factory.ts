/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WebbMultimint,
  WebbMultimintInterface,
} from "../../WebbMultimint.sol/WebbMultimint";

const _abi = [
  {
    inputs: [],
    name: "multimint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080546001600160a01b03191673f639b4ebb77df1ed4b5014c244f60e72b8adb29b17905534801561003657600080fd5b50610182806100466000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633a6feadb14610030575b600080fd5b61003861003a565b005b60008060009054906101000a90046001600160a01b03166001600160a01b031663ecacaf0b6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610090573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b49190610135565b905060015b8181116101315760005460405163140e25ad60e31b8152600481018390526001600160a01b039091169063a0712d6890602401600060405180830381600087803b15801561010657600080fd5b505af115801561011a573d6000803e3d6000fd5b5050505080806101299061014e565b9150506100b9565b5050565b60006020828403121561014757600080fd5b5051919050565b60006001820161016e57634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c634300080f000a";

type WebbMultimintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WebbMultimintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WebbMultimint__factory extends ContractFactory {
  constructor(...args: WebbMultimintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WebbMultimint> {
    return super.deploy(overrides || {}) as Promise<WebbMultimint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WebbMultimint {
    return super.attach(address) as WebbMultimint;
  }
  override connect(signer: Signer): WebbMultimint__factory {
    return super.connect(signer) as WebbMultimint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WebbMultimintInterface {
    return new utils.Interface(_abi) as WebbMultimintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WebbMultimint {
    return new Contract(address, _abi, signerOrProvider) as WebbMultimint;
  }
}
